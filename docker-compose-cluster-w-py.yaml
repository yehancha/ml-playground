services:
  # Service Registry - manages backend service discovery
  registry:
    build:
      context: ./registry
    ports:
      - "3020:3020"
    environment:
      - REGISTRY_PORT=3020
      - HEALTH_CHECK_INTERVAL=30000
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3020/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s

  # Backend Service - provides model processing
  backend:
    build:
      context: ./backend
    depends_on:
      registry:
        condition: service_healthy
    ports:
      - "3010:3010"
    environment:
      - BACKEND_PORT=3010
      - SERVICE_URL=http://backend:3010
      - REGISTRY_URL=http://registry:3020
      - LOGGER_URL=http://logger:3040
      - GENAI_API_KEY=${GENAI_API_KEY}
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3010/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
      
  # Python Backend Service - provides model processing in Python
  backend-py:
    build:
      context: ./backend-py
    ports:
      - "3011:3011"
    environment:
      - BACKEND_PORT=3011
      - SERVICE_URL=http://backend-py:3011
      - REGISTRY_URL=http://registry:3020
      - LOGGER_URL=http://logger:3040
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "-O", "/dev/null", "http://localhost:3011/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 15s
  # Logger Service - handles request logging
  logger:
    build:
      context: ./logger
    ports:
      - "3040:3040"
    environment:
      - LOGGER_PORT=3040
      - REGISTRY_URL=http://registry:3020
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3040/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s

  # Proxy Service - handles client requests and load balancing
  proxy:
    build:
      context: ./proxy
    depends_on:
      registry:
        condition: service_healthy
      backend:
        condition: service_healthy
      backend-py:
        condition: service_healthy
      logger:
        condition: service_healthy
    ports:
      - "3030:3030"
    environment:
      - PROXY_PORT=3030
      - REGISTRY_URL=http://registry:3020
      - LOGGER_URL=http://logger:3040
      - SERVICE_CACHE_TTL=30000
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3030/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s

  # Frontend Service - client web interface
  frontend:
    build:
      context: ./frontend
      args:
        NEXT_PUBLIC_API_URL: "http://localhost:3030"  # Now points to proxy instead of backend
    ports:
      - "3000:3000"
    depends_on:
      proxy:
        condition: service_healthy
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:3030
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
